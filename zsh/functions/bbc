# locations
CLOUD_ENV=$HOME/vagrant/programmes-cloud-sandbox
FORGE_ENV=$HOME/vagrant/forge-sandbox-vagrant
CLIFTON_ENV=$HOME/workspace/programmes-clifton
BACKFILL_ENV=$HOME/workspace/programmes-cloud-sandbox/programmes-backfill-test

CLIFTON_AWS=10.49.46.183

# Customize to your needs...
reith_proxies () {
    if [[ $1 == on ]]; then
        export http_proxy='http://www-cache.reith.bbc.co.uk:80'
        export https_proxy='http://www-cache.reith.bbc.co.uk:80'
        export ftp_proxy='ftp-gw.reith.bbc.co.uk:21'
        export socks_proxy='socks-gw.reith.bbc.co.uk:1085'

        export HTTP_PROXY="$http_proxy"
        export HTTPS_PROXY="$https_proxy"
        export FTP_PROXY="$ftp_proxy"
        export SOCKS_PROXY="$socks_proxy"
        export NO_PROXY="$no_proxy"

        export no_proxy='gateway.bbc.co.uk,ips.radio.bbc.co.uk,radio.bbc.co.uk,core.bbc.co.uk,sandbox.dev.bbc.co.uk,sandbox.bbc.co.uk,localhost,10.0.0.0/8,192.168.0.0/16,192.168.99.100,192.168.193.10,192.168.192.10'
        export NO_PROXY="$no_proxy"

    elif [[ $1 == off ]]; then
        unset http_proxy HTTP_PROXY https_proxy HTTPS_PROXY FTP_PROXY ftp_proxy socks_proxy SOCKS_PROXY no_proxy NO_PROXY
    fi
}

diffaps() {
    pid=$1
    if [[ $(echo -n $pid | tail -c 5) != .json ]]; then
        pid="$pid.json"
    fi

    vimdiff <(curl http://open.live.bbc.co.uk/aps/programmes/$pid | python -m json.tool) <(curl http://sandbox.bbc.co.uk:8000/aps/programmes/$pid | python -m json.tool)
    echo
}

__vm() {
    cd $1

    if [[ $2 == halt ]]; then
        vagrant halt

    elif [[ $2 == restart ]]; then
        vagrant halt
        vagrant up
        vagrant ssh

    else
        if [[ $(vagrant status --machine-readable) == *poweroff* ]] || [[ $(vagrant status --machine-readable) == *abort* ]]; then
            vagrant up
        fi

        if [ $# -eq 1 ]; then
            vagrant ssh
        else
            vm_cmd=$(echo "${@:2}")
            vagrant ssh -c "$vm_cmd" 
        fi
    fi

    if [[ $OLDPWD != $1 ]]; then
        cd $OLDPWD
    fi
}
cloud() {
    __vm $CLOUD_ENV $@
}

forge() {
    __vm $FORGE_ENV $@
}

clifton() {
    if [[ $PWD != $CLIFTON_ENV ]]; then
        cd $CLIFTON_ENV
    fi


    if [[ $1 == start ]]; then
        ./proxy_on.sh $CLIFTON_AWS
        php app/console server:start 0.0.0.0:8000
    elif [[ $1 == stop ]]; then
        ./proxy_off.sh
        php app/console server:stop 0.0.0.0:8000
    elif [[ $1 == restart ]]; then
        clifton stop && clifton start
    else
        >&2 "Invalid argument for clifton"
    fi

    if [[ $OLDPWD != $CLIFTON_ENV ]]; then
        cd $OLDPWD
    fi
}

backfillByUrl() {
    if [[ $PWD != $BACKFILL_ENV ]]; then
        >&2 "Not in correct folder: $BACKFILL_ENV"
    else
        ./console pips:url $1.json $2
        open reports/pips/manual/$1/diff.html
    fi
}

alias ssh='ssh -X'
alias vim='vim -p'

location=`networksetup -getcurrentlocation`
if [[ $location == *"On"* ]]; then
    reith_proxies on
fi
